package  {		import flash.display.MovieClip;	import flash.events.MouseEvent;		public class MuteButton extends MovieClip {				private var mbToggle:String;		internal var main:BenefitCalculator;		public function MuteButton() {			init();		}				private function init():void {						//set the toggle variable to its initial state and add the event listeners for switching button images						mbToggle = "SoundOn";			this.gotoAndStop("soundOnUp");			this.addEventListener(MouseEvent.MOUSE_OVER, mOver, false, 0, true);			this.addEventListener(MouseEvent.MOUSE_OUT, mOut, false, 0, true);			this.addEventListener(MouseEvent.CLICK, toggleButton, false, 0, true);		}				private function mOver(Event:MouseEvent):void {						//check the value of mbToggle and move to the appropriate frame to show the over state						switch (mbToggle) {				case "SoundOn":					this.gotoAndStop("soundOnOver");					break;								case "SoundOff":					this.gotoAndStop("soundOffOver");					break;			}		}				private function mOut(Event:MouseEvent):void {						//check the value of mbToggle and move to the appropriate frame to show the up state						switch (mbToggle) {				case "SoundOn":					this.gotoAndStop("soundOnUp");					break;								case "SoundOff":					this.gotoAndStop("soundOffUp");					break;			}		}				private function toggleButton(Event:MouseEvent):void {						//check the current value of mbToggle, and switch it to the other value						if (mbToggle == "SoundOn") {				main.audioManager.muteSound();				mbToggle = "SoundOff";			} else {				main.audioManager.unmuteSound();				mbToggle = "SoundOn";			}						//check the value of mbToggle, and set the new button state to match						switch (mbToggle) {				case "SoundOn":					this.gotoAndStop("soundOnOver");					break;								case "SoundOff":					this.gotoAndStop("soundOffOver");					break;			}		}	}	}