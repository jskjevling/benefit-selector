package  {		import flash.display.*;	import flash.geom.*;	import flash.events.*;	import flash.net.*;	import flash.text.*;	import fl.transitions.*;	import fl.transitions.easing.*;	import flash.ui.*;		public class VisualManager extends MovieClip {				internal var main:BenefitCalculator;		public function VisualManager() {			init();		}				private function init():void {			//do stuff		}				public function drawBackground():void {						//this function draws the gradient background of the main stage						var colors:Array = [0xFFFFFF, 0xFae05c]; //sets the colors for the two halves of the gradient			var alphas:Array = [1, 1]; //sets both colors to opaque			var ratios:Array = [120, 255]; //places starting point of colors using values from 0-255			var matrix:Matrix = new Matrix();			matrix.createGradientBox(960, 450, 1.57, 0, 0); //set the size of the background gradient, its rotation, and x/y position			main.graphics.beginGradientFill(GradientType.LINEAR, colors, alphas, ratios, matrix); //start the fill and draw the shape			main.graphics.lineTo(main.stage.stageWidth, 0);			main.graphics.lineTo(main.stage.stageWidth, main.stage.stageHeight);			main.graphics.lineTo(0, main.stage.stageHeight);			main.graphics.lineTo(0, 0);			main.graphics.endFill(); //end the fill		}				internal function addTopLayerNav():void {						addLogo();			addIcons();			addBack();			addPause();			addMute();			main.addChildAt(main.slideContents,0);		}				private function addLogo():void {						//this function draws the top level elements and creates the general nav/interface buttons						main.cLogo = new ClientLogo(); //create a new instance of the client logo, set the position and add it to the diplay list			main.cLogo.x = 10;			main.cLogo.y = 10;			main.addChild(main.cLogo);		}				private function addIcons():void {			main.singleMale = new Icon_SMale();			main.singleMale.x = 908;			main.singleMale.y = 54;			main.singleMale.visible = false;			main.addChildAt(main.singleMale, 0);						main.singleMale1Dep = new Icon_SMale_1Dep();			main.singleMale1Dep.x = 908;			main.singleMale1Dep.y = 54;			main.singleMale1Dep.visible = false;			main.addChildAt(main.singleMale1Dep, 0);						main.singleMale2Dep = new Icon_SMale_2Dep();			main.singleMale2Dep.x = 908;			main.singleMale2Dep.y = 54;			main.singleMale2Dep.visible = false;			main.addChildAt(main.singleMale2Dep, 0);						main.singleFem = new Icon_SFem();			main.singleFem.x = 908;			main.singleFem.y = 54;			main.singleFem.visible = false;			main.addChildAt(main.singleFem, 0);						main.singleFem1Dep = new Icon_SFem_1Dep();			main.singleFem1Dep.x = 908;			main.singleFem1Dep.y = 54;			main.singleFem1Dep.visible = false;			main.addChildAt(main.singleFem1Dep, 0);						main.singleFem2Dep = new Icon_SFem_2Dep();			main.singleFem2Dep.x = 908;			main.singleFem2Dep.y = 54;			main.singleFem2Dep.visible = false;			main.addChildAt(main.singleFem2Dep, 0);						main.marriedMale = new Icon_MMale();			main.marriedMale.x = 908;			main.marriedMale.y = 54;			main.marriedMale.visible = false;			main.addChildAt(main.marriedMale, 0);						main.marriedMale1Dep = new Icon_MMale_1Dep();			main.marriedMale1Dep.x = 908;			main.marriedMale1Dep.y = 54;			main.marriedMale1Dep.visible = false;			main.addChildAt(main.marriedMale1Dep, 0);						main.marriedMale2Dep = new Icon_MMale_2Dep();			main.marriedMale2Dep.x = 908;			main.marriedMale2Dep.y = 54;			main.marriedMale2Dep.visible = false;			main.addChildAt(main.marriedMale2Dep, 0);						main.marriedFem = new Icon_MFem();			main.marriedFem.x = 908;			main.marriedFem.y = 54;			main.marriedFem.visible = false;			main.addChildAt(main.marriedFem, 0);						main.marriedFem1Dep = new Icon_MFem_1Dep();			main.marriedFem1Dep.x = 908;			main.marriedFem1Dep.y = 54;			main.marriedFem1Dep.visible = false;			main.addChildAt(main.marriedFem1Dep, 0);						main.marriedFem2Dep = new Icon_MFem_2Dep();			main.marriedFem2Dep.x = 908;			main.marriedFem2Dep.y = 54;			main.marriedFem2Dep.visible = false;			main.addChildAt(main.marriedFem2Dep, 0);		}				private function addBack():void {						//create back button, position it, and add its functionality						main.goBack = new BackButton();			main.goBack.x = 25;			main.goBack.y = 395;			main.goBack.visible = false;			main.addChildAt(main.goBack, 0);			main.goBack.addEventListener(MouseEvent.CLICK, prevHandler, false, 0, true);		}				private function addPause():void {						//create the play/pause button, position it, and add its functionality						main.ppButton = new PlayPause();			main.ppButton.x = 850;			main.ppButton.y = 395;			main.addChildAt(main.ppButton, 0);			main.ppButton.main = main;			//main.ppButton.addEventListener(MouseEvent.CLICK, pauseHandler, false, 0, true);		}				private function addMute():void {						//create the mute button, position it, and add its functionality						main.mButton = new MuteButton();			main.mButton.x = 900;			main.mButton.y = 395;			main.addChildAt(main.mButton, 0);			main.mButton.main = main;			//main.mButton.addEventListener(MouseEvent.CLICK, muteHandler, false, 0, true);		}				internal function prevHandler(e:MouseEvent) {			main.slideManager.goToPrevSlide();		}				internal function pauseHandler(e:MouseEvent) {			main.actionManager.pauseAction();		}				internal function muteHandler(e:MouseEvent):void {			main.audioManager.muteSound();		}				public function callTextIn(whichText:LineText):void {			if (whichText.inTransition=="BLINK") { //create the BLINK transition in				var txtTweenT1:Tween = new Tween(whichText, "alpha", Elastic.easeOut, .3, 1, 8, false);				var txtTweenT2:Tween = new Tween(whichText, "y", Elastic.easeOut, whichText.y-50, whichText.y+50, 8, false);				//txtTweenT2.addEventListener(TweenEvent.MOTION_FINISH, finishListener, false, 0, true);			} else if (whichText.inTransition=="FADE") { //create the FADE transition in				var txtTweenT:Tween = new Tween(whichText, "alpha", Regular.easeOut, 0, 1, 8, false);			}		}				public function callTextOut(whichText:LineText):void {			if (whichText.outTransition=="BLINK") { //create the BLINK transition in				var txtTweenT1:Tween = new Tween(whichText, "alpha", Elastic.easeOut, 1, .3, 8, false);				var txtTweenT2:Tween = new Tween(whichText, "y", Elastic.easeOut, whichText.y+50, whichText.y-50, 8, false);			} else if (whichText.outTransition=="FADE") { //create the FADE transition in				var txtTweenT:Tween = new Tween(whichText, "alpha", Regular.easeOut, 1, 0, 8, false);			}		}				public function callInputIn(whichInput:TextInput):void {			if (whichInput.inTransition=="BLINK") { //create the BLINK transition in				var txtTweenI1:Tween = new Tween(whichInput, "alpha", Elastic.easeOut, .3, 1, 8, false);				var txtTweenI2:Tween = new Tween(whichInput, "y", Elastic.easeOut, whichInput.y-50, whichInput.y+50, 8, false);			} else if (whichInput.inTransition=="FADE") { //create the FADE transition in				var txtTweenI:Tween = new Tween(whichInput, "alpha", Regular.easeOut, 0, 1, 8, false);			}		}				public function callInputOut(whichInput:TextInput):void {			if (whichInput.outTransition=="BLINK") { //create the BLINK transition in				var txtTweenI1:Tween = new Tween(whichInput, "alpha", Elastic.easeOut, 1, .3, 8, false);				var txtTweenI2:Tween = new Tween(whichInput, "y", Elastic.easeOut, whichInput.y+50, whichInput.y-50, 8, false);			} else if (whichInput.outTransition=="FADE") { //create the FADE transition in				var txtTweenI:Tween = new Tween(whichInput, "alpha", Regular.easeOut, 1, 0, 8, false);			}		}				public function callButtonIn(whichButton:ButtonChoice):void {			if (whichButton.inTransition=="BLINK") { //create the BLINK transition in				var txtTweenB1:Tween = new Tween(whichButton, "alpha", Elastic.easeOut, .3, 1, 8, false);				var txtTweenB2:Tween = new Tween(whichButton, "y", Elastic.easeOut, whichButton.y-50, whichButton.y+50, 8, false);			} else if (whichButton.inTransition=="FADE") { //create the FADE transition in				var txtTweenB:Tween = new Tween(whichButton, "alpha", Regular.easeOut, 0, 1, 8, false);			}		}				public function callButtonOut(whichButton:ButtonChoice):void {			if (whichButton.outTransition=="BLINK") { //create the BLINK transition in				var txtTweenB1:Tween = new Tween(whichButton, "alpha", Elastic.easeOut, 1, .3, 8, false);				var txtTweenB2:Tween = new Tween(whichButton, "y", Elastic.easeOut, whichButton.y+50, whichButton.y-50, 8, false);			} else if (whichButton.outTransition=="FADE") { //create the FADE transition in				var txtTweenB:Tween = new Tween(whichButton, "alpha", Regular.easeOut, 1, 0, 8, false);			}		}				public function callCheckboxIn(whichCheckbox:CheckboxOption):void {			if (whichCheckbox.inTransition=="BLINK") { //create the BLINK transition in				var txtTweenC1:Tween = new Tween(whichCheckbox, "alpha", Elastic.easeOut, .3, 1, 8, false);				var txtTweenC2:Tween = new Tween(whichCheckbox, "y", Elastic.easeOut, whichCheckbox.y-50, whichCheckbox.y+50, 8, false);			} else if (whichCheckbox.inTransition=="FADE") { //create the FADE transition in				var txtTweenC:Tween = new Tween(whichCheckbox, "alpha", Regular.easeOut, 0, 1, 8, false);			}		}				public function callCheckboxOut(whichCheckbox:CheckboxOption):void {			if (whichCheckbox.outTransition=="BLINK") { //create the BLINK transition in				var txtTweenC1:Tween = new Tween(whichCheckbox, "alpha", Elastic.easeOut, 1, .3, 8, false);				var txtTweenC2:Tween = new Tween(whichCheckbox, "y", Elastic.easeOut, whichCheckbox.y+50, whichCheckbox.y-50, 8, false);			} else if (whichCheckbox.outTransition=="FADE") { //create the FADE transition in				var txtTweenC:Tween = new Tween(whichCheckbox, "alpha", Regular.easeOut, 1, 0, 8, false);			}		}				public function callNextIn(whichButton:NextButton):void {			if (whichButton.inTransition=="BLINK") { //create the BLINK transition in				var txtTweenN1:Tween = new Tween(whichButton, "alpha", Elastic.easeOut, .3, 1, 8, false);				var txtTweenN2:Tween = new Tween(whichButton, "y", Elastic.easeOut, whichButton.y-50, whichButton.y+50, 8, false);			} else if (whichButton.inTransition=="FADE") { //create the FADE transition in				var txtTweenN:Tween = new Tween(whichButton, "alpha", Regular.easeOut, 0, 1, 8, false);			}		}				public function callNextOut(whichButton:NextButton):void {			if (whichButton.outTransition=="BLINK") { //create the BLINK transition in				var txtTweenN1:Tween = new Tween(whichButton, "alpha", Elastic.easeOut, 1, .3, 8, false);				var txtTweenN2:Tween = new Tween(whichButton, "y", Elastic.easeOut, whichButton.y+50, whichButton.y-50, 8, false);			} else if (whichButton.outTransition=="FADE") { //create the FADE transition in				var txtTweenN:Tween = new Tween(whichButton, "alpha", Regular.easeOut, 1, 0, 8, false);			}		}				public function clearScreen(nextA:String, whichF:String, nextS:Number):void {			trace("clearing screen");			for (var a:int = 0; a<main.textArray.length; a++) {				callTextOut(main.textArray[a]);			}			for (var b:int = 0; b<main.inputArray.length; b++) {				callInputOut(main.inputArray[b]);			}			for (var c:int = 0; c<main.buttonArray.length; c++) {				callButtonOut(main.buttonArray[c]);			}			for (var d:int = 0; d<main.checkboxArray.length; d++) {				callCheckboxOut(main.checkboxArray[d]);			}			for (var e:int = 0; e<main.nextArray.length; e++) {				callNextOut(main.nextArray[e]);			}			main.actionManager.triggerAction(nextA, whichF, nextS);		}				public function cleanScreen():void {			trace("cleaning screen");			for (var a:int = main.textArray.length; a>0; a--) {				if (main.textArray[a]!=null) {					main.slideContents.removeChild(main.textArray[a]);				}				main.textArray.pop();			}			for (var b:int = main.inputArray.length; b>0; b--) {				if (main.inputArray[b]!=null) {					main.slideContents.removeChild(main.inputArray[b]);				}				main.inputArray.pop();			}			for (var c:int = main.buttonArray.length; c>0; c--) {				if (main.buttonArray[c]!=null) {					main.slideContents.removeChild(main.buttonArray[c]);				}				main.buttonArray.pop();			}			for (var d:int = main.checkboxArray.length; d>0; d--) {				if (main.checkboxArray[d]!=null) {					main.slideContents.removeChild(main.checkboxArray[d]);				}				main.checkboxArray.pop();			}			for (var e:int = main.nextArray.length; e>0; e--) {				if (main.nextArray[e]!=null) {					main.slideContents.removeChild(main.nextArray[e]);				}				main.nextArray.pop();			}		}				public function finishListener(e:TweenEvent):void {					}	}	}