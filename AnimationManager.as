package  {		import flash.display.*;	import flash.geom.*;	import flash.events.*;	import flash.net.*;	import flash.text.*;	import fl.transitions.*;	import fl.transitions.easing.*;	import flash.ui.*;	import flash.filters.*;		public class AnimationManager extends MovieClip {				internal var main:BenefitCalculator;		public function AnimationManager() {			// constructor code		}				private function init():void {					}				public function triggerAnimation(whichFile:String):void {			main.addChildAt(main.animationHolder, 0);			switch (whichFile) {				case "ZIPCODE":					switch (main.userData.ZIPCODE) {						case "60606":							main.currentAnimation = (new ZIPCODE_IL() as MovieClip);							break;						case "53208":							main.currentAnimation = (new ZIPCODE_WI() as MovieClip);							break;						default:							main.currentAnimation = (new ZIPCODE_IL() as MovieClip);							break;					}					break;				case "STATUS":					switch (main.userData.GENDER) {						case "MALE":							switch (main.userData.MSTATUS) {								case "SINGLE":									main.currentAnimation = (new SINGLE_MALE() as MovieClip);									break;								case "MARRIED":									main.currentAnimation = (new MARRIED_MALE() as MovieClip);									break;							}							break;						case "FEMALE":							switch (main.userData.MSTATUS) {								case "SINGLE":									main.currentAnimation = (new SINGLE_FEMALE() as MovieClip);									break;								case "MARRIED":									main.currentAnimation = (new MARRIED_FEMALE() as MovieClip);									break;							}							break;					}					break;				case "HOUSEHOLD":					switch (main.userData.GENDER) {						case "MALE":							switch (main.userData.MSTATUS) {								case "SINGLE":									if (main.userData.DEPENDENTS=="1") {										main.currentAnimation = (new SINGLE_MALE_1DEP() as MovieClip);									} else if (main.userData.DEPENDENTS=="2") {										main.currentAnimation = (new SINGLE_MALE_2DEP() as MovieClip);									} else if (main.userData.DEPENDENTS=="3") {										main.currentAnimation = (new SINGLE_MALE_3DEP() as MovieClip);									} else {										main.currentAnimation = (new SINGLE_MALE_XDEP() as MovieClip);									}									break;								case "MARRIED":									if (main.userData.DEPENDENTS=="1") {										main.currentAnimation = (new MARRIED_MALE_1DEP() as MovieClip);									} else if (main.userData.DEPENDENTS=="2") {										main.currentAnimation = (new MARRIED_MALE_2DEP() as MovieClip);									} else if (main.userData.DEPENDENTS=="3") {										main.currentAnimation = (new MARRIED_MALE_3DEP() as MovieClip);									} else {										main.currentAnimation = (new MARRIED_MALE_XDEP() as MovieClip);									}									break;							}							break;						case "FEMALE":							switch (main.userData.MSTATUS) {								case "SINGLE":									if (main.userData.DEPENDENTS=="1") {										main.currentAnimation = (new SINGLE_FEMALE_1DEP() as MovieClip);									} else if (main.userData.DEPENDENTS=="2") {										main.currentAnimation = (new SINGLE_FEMALE_2DEP() as MovieClip);									} else if (main.userData.DEPENDENTS=="3") {										main.currentAnimation = (new SINGLE_FEMALE_3DEP() as MovieClip);									} else {										main.currentAnimation = (new SINGLE_FEMALE_XDEP() as MovieClip);									}									break;								case "MARRIED":									if (main.userData.DEPENDENTS=="1") {										main.currentAnimation = (new MARRIED_FEMALE_1DEP() as MovieClip);									} else if (main.userData.DEPENDENTS=="2") {										main.currentAnimation = (new MARRIED_FEMALE_2DEP() as MovieClip);									} else if (main.userData.DEPENDENTS=="3") {										main.currentAnimation = (new MARRIED_FEMALE_3DEP() as MovieClip);									} else {										main.currentAnimation = (new MARRIED_FEMALE_XDEP() as MovieClip);									}									break;							}							break;					}					break;				case "DOCTOR":					switch (main.userData.DOCTORVISITS) {						case "RARE":							switch (main.userData.GENDER) {								case "MALE":									main.currentAnimation = (new DOCTOR_RARE_MALE() as MovieClip);									break;								case "FEMALE":									main.currentAnimation = (new DOCTOR_RARE_FEMALE() as MovieClip);									break;							}							break;						case "SOMETIMES":							switch (main.userData.GENDER) {								case "MALE":									main.currentAnimation = (new DOCTOR_SOMETIMES_MALE() as MovieClip);									break;								case "FEMALE":									main.currentAnimation = (new DOCTOR_SOMETIMES_FEMALE() as MovieClip);									break;							}							break;						case "OFTEN":							switch (main.userData.GENDER) {								case "MALE":									main.currentAnimation = (new DOCTOR_OFTEN_MALE() as MovieClip);									break;								case "FEMALE":									main.currentAnimation = (new DOCTOR_OFTEN_FEMALE() as MovieClip);									break;							}							break;						case "VERYOFTEN":							switch (main.userData.GENDER) {								case "MALE":									main.currentAnimation = (new DOCTOR_OFTEN_MALE() as MovieClip);									break;								case "FEMALE":									main.currentAnimation = (new DOCTOR_OFTEN_FEMALE() as MovieClip);									break;							}							break;					}					break;					case "END":					main.singleMale.visible = false;					main.singleMale1Dep.visible = false;					main.singleMale2Dep.visible = false;					main.singleFem.visible = false;					main.singleFem1Dep.visible = false;					main.singleFem2Dep.visible = false;					main.marriedMale.visible = false;					main.marriedMale1Dep.visible = false;					main.marriedMale2Dep.visible = false;					main.marriedFem.visible = false;					main.marriedFem1Dep.visible = false;					main.marriedFem2Dep.visible = false;					switch (main.userData.GENDER) {						case "MALE":							switch (main.userData.MSTATUS) {								case "SINGLE":									if (main.userData.DEPENDENTS=="0") {										main.currentAnimation = (new END_SINGLE_MALE() as MovieClip);									} else if (main.userData.DEPENDENTS=="1") {										main.currentAnimation = (new END_SINGLE_MALE_1DEP() as MovieClip);									} else {										main.currentAnimation = (new END_SINGLE_MALE_2DEP() as MovieClip);									}									break;								case "MARRIED":									if (main.userData.DEPENDENTS=="0") {										main.currentAnimation = (new END_MARRIED_MALE() as MovieClip);									} else if (main.userData.DEPENDENTS=="1") {										main.currentAnimation = (new END_MARRIED_MALE_1DEP() as MovieClip);									} else {										main.currentAnimation = (new END_MARRIED_MALE_2DEP() as MovieClip);									}									break;							}							break;						case "FEMALE":							switch (main.userData.MSTATUS) {								case "SINGLE":									if (main.userData.DEPENDENTS=="0") {										main.currentAnimation = (new END_SINGLE_FEMALE() as MovieClip);									} else if (main.userData.DEPENDENTS=="1") {										main.currentAnimation = (new END_SINGLE_FEMALE_1DEP() as MovieClip);									} else {										main.currentAnimation = (new END_SINGLE_FEMALE_2DEP() as MovieClip);									}									break;								case "MARRIED":									if (main.userData.DEPENDENTS=="0") {										main.currentAnimation = (new END_MARRIED_FEMALE() as MovieClip);									} else if (main.userData.DEPENDENTS=="1") {										main.currentAnimation = (new END_MARRIED_FEMALE_1DEP() as MovieClip);									} else {										main.currentAnimation = (new END_MARRIED_FEMALE_2DEP() as MovieClip);									}									break;							}							break;					}					break;				break;			}			main.currentAnimation.gotoAndStop(0);			main.animationHolder.addChild(main.currentAnimation);			if (whichFile!="END") {				main.currentAnimation.addEventListener(Event.ENTER_FRAME, animationListener, false, 0, true);			} else {				main.currentAnimation.addEventListener(Event.ENTER_FRAME, endListener, false, 0, true);			}			main.currentAnimation.play();		}				public function animationListener(e:Event) {			if (e.target.currentFrame==e.target.totalFrames) {				e.target.stop();				main.currentAnimation.removeEventListener(Event.ENTER_FRAME, animationListener);				main.animationHolder.removeChild(main.currentAnimation);				main.currentAnimation = null;				main.visualManager.cleanScreen();				main.slideManager.prevSlide = main.slideManager.currSlide;				main.slideManager.visitedSlides.push(main.slideManager.prevSlide);				main.slideManager.currSlide = main.actionManager.toSlide;				main.slideManager.loadSlide();			}		}				public function endListener(e:Event) {			if (e.target.currentFrame==e.target.totalFrames) {				e.target.stop();				main.currentAnimation.removeEventListener(Event.ENTER_FRAME, endListener);				main.currentAnimation = null;			}		}				public function pauseAnimation():void {			main.currentAnimation.stop();		}				public function playAnimation():void {			main.currentAnimation.play();		}	}	}